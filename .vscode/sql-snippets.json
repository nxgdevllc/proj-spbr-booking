{
  "SPBR Database Queries": {
    "prefix": "spbr",
    "body": [
      "-- San Pedro Beach Resort Database Queries",
      "-- Generated: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      "",
      "-- =========================================",
      "-- CORE QUERIES FOR SAN PEDRO BEACH RESORT",
      "-- =========================================",
      "",
      "${1:SELECT * FROM table_name;}"
    ],
    "description": "SPBR Database Query Template"
  },
  "SPBR User Management": {
    "prefix": "spbr-users",
    "body": [
      "-- User Management Queries",
      "",
      "-- Get all user profiles with roles",
      "SELECT ",
      "  up.id,",
      "  up.first_name,",
      "  up.last_name,",
      "  up.email,",
      "  up.role,",
      "  up.created_at",
      "FROM user_profiles up",
      "ORDER BY up.created_at DESC;",
      "",
      "-- Get employees with user profiles",
      "SELECT ",
      "  e.id,",
      "  e.first_name,",
      "  e.last_name,",
      "  e.position,",
      "  e.hire_date,",
      "  up.email,",
      "  up.role",
      "FROM employees e",
      "LEFT JOIN user_profiles up ON e.user_profile_id = up.id",
      "ORDER BY e.hire_date DESC;"
    ],
    "description": "User Management Queries"
  },
  "SPBR Booking System": {
    "prefix": "spbr-bookings",
    "body": [
      "-- Booking System Queries",
      "",
      "-- Get all active bookings",
      "SELECT ",
      "  b.id,",
      "  b.check_in_date,",
      "  b.check_out_date,",
      "  b.total_amount,",
      "  b.status,",
      "  g.first_name || ' ' || g.last_name AS guest_name,",
      "  g.phone,",
      "  u.unit_number,",
      "  u.unit_type",
      "FROM bookings b",
      "JOIN guests g ON b.guest_id = g.id",
      "JOIN units u ON b.unit_id = u.id",
      "WHERE b.status = 'confirmed'",
      "ORDER BY b.check_in_date;",
      "",
      "-- Get booking revenue by month",
      "SELECT ",
      "  DATE_TRUNC('month', b.check_in_date) AS month,",
      "  COUNT(*) AS total_bookings,",
      "  SUM(b.total_amount) AS total_revenue",
      "FROM bookings b",
      "WHERE b.status = 'confirmed'",
      "GROUP BY DATE_TRUNC('month', b.check_in_date)",
      "ORDER BY month DESC;"
    ],
    "description": "Booking System Queries"
  },
  "SPBR Inventory Management": {
    "prefix": "spbr-inventory",
    "body": [
      "-- Inventory Management Queries",
      "",
      "-- Get inventory items with categories",
      "SELECT ",
      "  ii.id,",
      "  ii.name,",
      "  ii.description,",
      "  ii.current_stock,",
      "  ii.restock_level,",
      "  ii.unit_price,",
      "  pc.name AS category_name,",
      "  s.name AS supplier_name",
      "FROM inventory_items ii",
      "LEFT JOIN product_categories pc ON ii.category_id = pc.id",
      "LEFT JOIN suppliers s ON ii.supplier_id = s.id",
      "ORDER BY ii.current_stock ASC;",
      "",
      "-- Get low stock items",
      "SELECT ",
      "  ii.name,",
      "  ii.current_stock,",
      "  ii.restock_level,",
      "  ii.unit_price,",
      "  pc.name AS category",
      "FROM inventory_items ii",
      "LEFT JOIN product_categories pc ON ii.category_id = pc.id",
      "WHERE ii.current_stock <= ii.restock_level",
      "ORDER BY ii.current_stock ASC;",
      "",
      "-- Get inventory value by category",
      "SELECT ",
      "  pc.name AS category,",
      "  COUNT(ii.id) AS item_count,",
      "  SUM(ii.current_stock * ii.unit_price) AS total_value",
      "FROM inventory_items ii",
      "LEFT JOIN product_categories pc ON ii.category_id = pc.id",
      "GROUP BY pc.name",
      "ORDER BY total_value DESC;"
    ],
    "description": "Inventory Management Queries"
  },
  "SPBR Financial Reports": {
    "prefix": "spbr-finance",
    "body": [
      "-- Financial Management Queries",
      "",
      "-- Get total expenses by month",
      "SELECT ",
      "  DATE_TRUNC('month', TO_DATE(e.date, 'YYYY-MM-DD')) AS month,",
      "  SUM(CAST(e.amount AS NUMERIC(10,2))) AS total_expenses",
      "FROM expenses_2025 e",
      "GROUP BY DATE_TRUNC('month', TO_DATE(e.date, 'YYYY-MM-DD'))",
      "ORDER BY month DESC;",
      "",
      "-- Get employee salary total",
      "SELECT ",
      "  DATE_TRUNC('month', TO_DATE(es.date, 'YYYY-MM-DD')) AS month,",
      "  SUM(CAST(es.amount AS NUMERIC(10,2))) AS total_salaries",
      "FROM employee_salaries_2025 es",
      "GROUP BY DATE_TRUNC('month', TO_DATE(es.date, 'YYYY-MM-DD'))",
      "ORDER BY month DESC;",
      "",
      "-- Get stakeholder withdrawals",
      "SELECT ",
      "  DATE_TRUNC('month', TO_DATE(sw.date, 'YYYY-MM-DD')) AS month,",
      "  SUM(CAST(sw.amount AS NUMERIC(10,2))) AS total_withdrawals",
      "FROM stakeholder_withdrawals_2025 sw",
      "GROUP BY DATE_TRUNC('month', TO_DATE(sw.date, 'YYYY-MM-DD'))",
      "ORDER BY month DESC;"
    ],
    "description": "Financial Management Queries"
  },
  "SPBR Audit Queries": {
    "prefix": "spbr-audit",
    "body": [
      "-- Audit and Security Queries",
      "",
      "-- Get recent audit logs",
      "SELECT ",
      "  al.id,",
      "  al.table_name,",
      "  al.action,",
      "  al.user_id,",
      "  al.timestamp,",
      "  al.old_values,",
      "  al.new_values",
      "FROM audit_logs al",
      "ORDER BY al.timestamp DESC",
      "LIMIT 100;",
      "",
      "-- Get inventory transactions",
      "SELECT ",
      "  it.id,",
      "  it.item_id,",
      "  ii.name AS item_name,",
      "  it.transaction_type,",
      "  it.quantity,",
      "  it.reason,",
      "  it.created_at",
      "FROM inventory_transactions it",
      "JOIN inventory_items ii ON it.item_id = ii.id",
      "ORDER BY it.created_at DESC",
      "LIMIT 50;"
    ],
    "description": "Audit and Security Queries"
  },
  "SPBR Data Validation": {
    "prefix": "spbr-validate",
    "body": [
      "-- Data Validation Queries",
      "",
      "-- Check for orphaned records",
      "SELECT 'bookings without guests' AS issue, COUNT(*) AS count",
      "FROM bookings b",
      "LEFT JOIN guests g ON b.guest_id = g.id",
      "WHERE g.id IS NULL",
      "UNION ALL",
      "SELECT 'bookings without units' AS issue, COUNT(*) AS count",
      "FROM bookings b",
      "LEFT JOIN units u ON b.unit_id = u.id",
      "WHERE u.id IS NULL",
      "UNION ALL",
      "SELECT 'inventory items without categories' AS issue, COUNT(*) AS count",
      "FROM inventory_items ii",
      "LEFT JOIN product_categories pc ON ii.category_id = pc.id",
      "WHERE pc.id IS NULL;",
      "",
      "-- Check for data type issues",
      "SELECT ",
      "  'expenses with invalid amounts' AS issue,",
      "  COUNT(*) AS count",
      "FROM expenses_2025",
      "WHERE amount !~ '^[0-9]+(\\.[0-9]{1,2})?$';"
    ],
    "description": "Data Validation Queries"
  },
  "SPBR Performance Queries": {
    "prefix": "spbr-performance",
    "body": [
      "-- Performance and Optimization Queries",
      "",
      "-- Check table sizes",
      "SELECT ",
      "  schemaname,",
      "  tablename,",
      "  attname,",
      "  n_distinct,",
      "  correlation",
      "FROM pg_stats",
      "WHERE schemaname = 'public'",
      "ORDER BY tablename, attname;",
      "",
      "-- Check for missing indexes",
      "SELECT ",
      "  t.table_name,",
      "  c.column_name,",
      "  c.data_type",
      "FROM information_schema.tables t",
      "JOIN information_schema.columns c ON t.table_name = c.table_name",
      "WHERE t.table_schema = 'public'",
      "  AND c.column_name IN ('id', 'created_at', 'updated_at')",
      "  AND t.table_type = 'BASE TABLE';"
    ],
    "description": "Performance and Optimization Queries"
  }
}
